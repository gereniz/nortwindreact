{"ast":null,"code":"var _jsxFileName = \"/Users/gereniz/Projects/btkakademi/btkakademireact/reactcourse/northwind-redux/src/components/products/AddOrUpdateProduct.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCategories } from \"../../redux/actions/categoryActions\";\nimport { saveProduct } from \"../../redux/actions/productActions\";\nimport ProductDetail from \"./ProductDetail\";\n\nfunction AddOrUpdateProduct({\n  products,\n  categories,\n  getProducts,\n  getCategories,\n  saveProduct,\n  history,\n  ...props\n}) {\n  const [product, setProduct] = useState({ ...props.product\n  });\n  useEffect(() => {\n    if (categories.length === 0) {\n      getCategories();\n    }\n\n    setProduct({ ...props.product\n    });\n  }, [props.product]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setProduct(previousProduct => ({ ...previousProduct,\n      [name]: name === \"categoryID\" ? parseInt(value, 10) : value\n    }));\n  }\n\n  function handleSave(event) {\n    event.previousProduct();\n    saveProduct(product).then(() => {\n      history.pushState(\"/\");\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ProductDetail, {\n    product: product,\n    categories: categories,\n    onChange: handleChange,\n    onSave: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  });\n}\n\nexport function getProductByID(products, productID) {\n  let product = products.find(product => product.productID == productID) || null;\n  return product;\n}\nconst mapDispatchToProps = {\n  getCategories,\n  saveProduct\n};\n\nfunction mapStateToProps(state, ownProps) {\n  const productID = ownProps.match.params.productID;\n  const product = productID && state.productListReducer.length > 0 ? getProductByID(state.productListReducer, productID) : {};\n  return {\n    product,\n    products: state.productListReducer,\n    categories: state.categoryListReducer\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrUpdateProduct);","map":{"version":3,"sources":["/Users/gereniz/Projects/btkakademi/btkakademireact/reactcourse/northwind-redux/src/components/products/AddOrUpdateProduct.js"],"names":["React","useEffect","useState","connect","getCategories","saveProduct","ProductDetail","AddOrUpdateProduct","products","categories","getProducts","history","props","product","setProduct","length","handleChange","event","name","value","target","previousProduct","parseInt","handleSave","then","pushState","getProductByID","productID","find","mapDispatchToProps","mapStateToProps","state","ownProps","match","params","productListReducer","categoryListReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,kBAAT,CAA4B;AAC1BC,EAAAA,QAD0B;AAE1BC,EAAAA,UAF0B;AAG1BC,EAAAA,WAH0B;AAI1BN,EAAAA,aAJ0B;AAK1BC,EAAAA,WAL0B;AAM1BM,EAAAA,OAN0B;AAO1B,KAAGC;AAPuB,CAA5B,EAQG;AACD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAE,GAAGU,KAAK,CAACC;AAAX,GAAD,CAAtC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,UAAU,CAACM,MAAX,KAAsB,CAA1B,EAA6B;AAC3BX,MAAAA,aAAa;AACd;;AACDU,IAAAA,UAAU,CAAC,EAAE,GAAGF,KAAK,CAACC;AAAX,KAAD,CAAV;AACD,GALQ,EAKN,CAACD,KAAK,CAACC,OAAP,CALM,CAAT;;AAOA,WAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAN,IAAAA,UAAU,CAAEO,eAAD,KAAsB,EAC/B,GAAGA,eAD4B;AAE/B,OAACH,IAAD,GAAQA,IAAI,KAAK,YAAT,GAAwBI,QAAQ,CAACH,KAAD,EAAQ,EAAR,CAAhC,GAA8CA;AAFvB,KAAtB,CAAD,CAAV;AAID;;AAED,WAASI,UAAT,CAAoBN,KAApB,EAA2B;AACzBA,IAAAA,KAAK,CAACI,eAAN;AACAhB,IAAAA,WAAW,CAACQ,OAAD,CAAX,CAAqBW,IAArB,CAA0B,MAAM;AAC9Bb,MAAAA,OAAO,CAACc,SAAR,CAAkB,GAAlB;AACD,KAFD;AAGD;;AAED,sBACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEZ,OADX;AAEE,IAAA,UAAU,EAAEJ,UAFd;AAGE,IAAA,QAAQ,EAAEO,YAHZ;AAIE,IAAA,MAAM,EAAEO,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD;;AAED,OAAO,SAASG,cAAT,CAAwBlB,QAAxB,EAAkCmB,SAAlC,EAA6C;AAClD,MAAId,OAAO,GACTL,QAAQ,CAACoB,IAAT,CAAef,OAAD,IAAaA,OAAO,CAACc,SAAR,IAAqBA,SAAhD,KAA8D,IADhE;AAEA,SAAOd,OAAP;AACD;AACD,MAAMgB,kBAAkB,GAAG;AACzBzB,EAAAA,aADyB;AAEzBC,EAAAA;AAFyB,CAA3B;;AAKA,SAASyB,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC,QAAML,SAAS,GAAGK,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBP,SAAxC;AACA,QAAMd,OAAO,GACXc,SAAS,IAAII,KAAK,CAACI,kBAAN,CAAyBpB,MAAzB,GAAkC,CAA/C,GACIW,cAAc,CAACK,KAAK,CAACI,kBAAP,EAA2BR,SAA3B,CADlB,GAEI,EAHN;AAIA,SAAO;AACLd,IAAAA,OADK;AAELL,IAAAA,QAAQ,EAAEuB,KAAK,CAACI,kBAFX;AAGL1B,IAAAA,UAAU,EAAEsB,KAAK,CAACK;AAHb,GAAP;AAKD;;AACD,eAAejC,OAAO,CAAC2B,eAAD,EAAiBD,kBAAjB,CAAP,CAA4CtB,kBAA5C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCategories } from \"../../redux/actions/categoryActions\";\nimport { saveProduct } from \"../../redux/actions/productActions\";\nimport ProductDetail from \"./ProductDetail\";\n\nfunction AddOrUpdateProduct({\n  products,\n  categories,\n  getProducts,\n  getCategories,\n  saveProduct,\n  history,\n  ...props\n}) {\n  const [product, setProduct] = useState({ ...props.product });\n\n  useEffect(() => {\n    if (categories.length === 0) {\n      getCategories();\n    }\n    setProduct({ ...props.product });\n  }, [props.product]);\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setProduct((previousProduct) => ({\n      ...previousProduct,\n      [name]: name === \"categoryID\" ? parseInt(value, 10) : value,\n    }));\n  }\n\n  function handleSave(event) {\n    event.previousProduct();\n    saveProduct(product).then(() => {\n      history.pushState(\"/\");\n    });\n  }\n\n  return (\n    <ProductDetail\n      product={product}\n      categories={categories}\n      onChange={handleChange}\n      onSave={handleSave}\n    ></ProductDetail>\n  );\n}\n\nexport function getProductByID(products, productID) {\n  let product =\n    products.find((product) => product.productID == productID) || null;\n  return product;\n}\nconst mapDispatchToProps = {\n  getCategories,\n  saveProduct,\n};\n\nfunction mapStateToProps(state, ownProps) {\n  const productID = ownProps.match.params.productID;\n  const product =\n    productID && state.productListReducer.length > 0\n      ? getProductByID(state.productListReducer, productID)\n      : {};\n  return {\n    product,\n    products: state.productListReducer,\n    categories: state.categoryListReducer,\n  };\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(AddOrUpdateProduct);\n"]},"metadata":{},"sourceType":"module"}