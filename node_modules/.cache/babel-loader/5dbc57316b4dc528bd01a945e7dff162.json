{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport initalState from \"./initalState\";\nexport default function cartReducer(state = initalState.cart, action) {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      var addedItem = state.find(c => c.product.id === action.payload.product.id);\n\n      if (addedItem) {\n        var newState = state.map(cartItem => {\n          if (cartItem.product.id === action.payload.product.id) {\n            return Object.assign({}, addedItem, {\n              quantity: addedItem.quantity + 1\n            });\n          }\n\n          return cartItem;\n        });\n        return newState;\n      } else {\n        return [...state, { ...action.payload\n        }]; //state kopyas覺n覺 al action.payload ekle\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      const newState2 = state.filter(cartItem => cartItem.product.id !== action.payload.id);\n      return newState2;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/gereniz/Projects/btkakademi/btkakademireact/reactcourse/northwind-redux/src/redux/reducers/cartReducer.js"],"names":["actionTypes","initalState","cartReducer","state","cart","action","type","ADD_TO_CART","addedItem","find","c","product","id","payload","newState","map","cartItem","Object","assign","quantity","REMOVE_FROM_CART","newState2","filter"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAACF,WAAW,CAACG,IAAvC,EAA4CC,MAA5C,EAAoD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,WAAjB;AACE,UAAIC,SAAS,GAAGL,KAAK,CAACM,IAAN,CACbC,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAUC,EAAV,KAAiBP,MAAM,CAACQ,OAAP,CAAeF,OAAf,CAAuBC,EADjC,CAAhB;;AAGA,UAAIJ,SAAJ,EAAe;AACb,YAAIM,QAAQ,GAAGX,KAAK,CAACY,GAAN,CAAWC,QAAD,IAAc;AACrC,cACEA,QAAQ,CAACL,OAAT,CAAiBC,EAAjB,KAAwBP,MAAM,CAACQ,OAAP,CAAeF,OAAf,CAAuBC,EADjD,EAEE;AACA,mBAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,SAAlB,EAA6B;AAClCW,cAAAA,QAAQ,EAAEX,SAAS,CAACW,QAAV,GAAqB;AADG,aAA7B,CAAP;AAGD;;AACD,iBAAOH,QAAP;AACD,SATc,CAAf;AAUA,eAAOF,QAAP;AACD,OAZD,MAYK;AACD,eAAO,CAAC,GAAGX,KAAJ,EAAU,EAAC,GAAGE,MAAM,CAACQ;AAAX,SAAV,CAAP,CADC,CACqC;AACzC;;AACD,SAAKb,WAAW,CAACoB,gBAAjB;AACE,YAAMC,SAAS,GAAGlB,KAAK,CAACmB,MAAN,CAAaN,QAAQ,IAAGA,QAAQ,CAACL,OAAT,CAAiBC,EAAjB,KAAwBP,MAAM,CAACQ,OAAP,CAAeD,EAA/D,CAAlB;AACA,aAAOS,SAAP;;AACJ;AACE,aAAOlB,KAAP;AAxBJ;AA0BD","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport initalState from \"./initalState\";\n\nexport default function cartReducer(state=initalState.cart,action) {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      var addedItem = state.find(\n        (c) => c.product.id === action.payload.product.id\n      );\n      if (addedItem) {\n        var newState = state.map((cartItem) => {\n          if (\n            cartItem.product.id === action.payload.product.id\n          ) {\n            return Object.assign({}, addedItem, {\n              quantity: addedItem.quantity + 1,\n            });\n          }\n          return cartItem;  \n        }); \n        return newState;\n      }else{\n          return [...state,{...action.payload}] //state kopyas覺n覺 al action.payload ekle\n      }\n      case actionTypes.REMOVE_FROM_CART:\n        const newState2 = state.filter(cartItem =>cartItem.product.id !== action.payload.id)\n        return newState2;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}