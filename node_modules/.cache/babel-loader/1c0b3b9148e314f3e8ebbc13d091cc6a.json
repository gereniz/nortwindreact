{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport function getProductsSuccess(products) {\n  return {\n    type: actionTypes.GET_PRODUCTS_SUCCESS,\n    payload: products\n  };\n}\nexport function createProductSuccess(product) {\n  return {\n    type: actionTypes.GET_PRODUCTS_SUCCESS,\n    payload: products\n  };\n}\nexport function updateProductSuccess(product) {\n  return {\n    type: actionTypes.UPDATE_PRODUCT_SUCCESS,\n    payload: products\n  };\n}\nexport function getProducts(categoryId) {\n  return function (dispatch) {\n    let url = \"http://localhost:3000/products\";\n\n    if (categoryId) {\n      url = url + \"?categoryID=\" + categoryId;\n    }\n\n    return fetch(url).then(response => response.json()).then(result => dispatch(getProductsSuccess(result)));\n  };\n}","map":{"version":3,"sources":["/Users/gereniz/Projects/btkakademireact/reactcourse/northwind-redux/src/redux/actions/productActions.js"],"names":["actionTypes","getProductsSuccess","products","type","GET_PRODUCTS_SUCCESS","payload","createProductSuccess","product","updateProductSuccess","UPDATE_PRODUCT_SUCCESS","getProducts","categoryId","dispatch","url","fetch","then","response","json","result"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI,oBADb;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASI,oBAAT,CAA8BC,OAA9B,EAAuC;AAC5C,SAAO;AAAEJ,IAAAA,IAAI,EAAEH,WAAW,CAACI,oBAApB;AAA0CC,IAAAA,OAAO,EAAEH;AAAnD,GAAP;AACD;AAED,OAAO,SAASM,oBAAT,CAA8BD,OAA9B,EAAuC;AAC5C,SAAO;AAAEJ,IAAAA,IAAI,EAAEH,WAAW,CAACS,sBAApB;AAA4CJ,IAAAA,OAAO,EAAEH;AAArD,GAAP;AACD;AAED,OAAO,SAASQ,WAAT,CAAqBC,UAArB,EAAiC;AACtC,SAAO,UAAUC,QAAV,EAAoB;AACzB,QAAIC,GAAG,GAAG,gCAAV;;AACA,QAAIF,UAAJ,EAAgB;AACdE,MAAAA,GAAG,GAAGA,GAAG,GAAG,cAAN,GAAuBF,UAA7B;AACD;;AACD,WAAOG,KAAK,CAACD,GAAD,CAAL,CACJE,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEG,MAAD,IAAYN,QAAQ,CAACX,kBAAkB,CAACiB,MAAD,CAAnB,CAFrB,CAAP;AAGD,GARD;AASD","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nexport function getProductsSuccess(products) {\n  return {\n    type: actionTypes.GET_PRODUCTS_SUCCESS,\n    payload: products,\n  };\n}\n\nexport function createProductSuccess(product) {\n  return { type: actionTypes.GET_PRODUCTS_SUCCESS, payload: products };\n}\n\nexport function updateProductSuccess(product) {\n  return { type: actionTypes.UPDATE_PRODUCT_SUCCESS, payload: products };\n}\n\nexport function getProducts(categoryId) {\n  return function (dispatch) {\n    let url = \"http://localhost:3000/products\";\n    if (categoryId) {\n      url = url + \"?categoryID=\" + categoryId;\n    }\n    return fetch(url)\n      .then((response) => response.json())\n      .then((result) => dispatch(getProductsSuccess(result)));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}